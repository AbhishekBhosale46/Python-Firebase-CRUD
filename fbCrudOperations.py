import pyrebase


firebaseConfig = config = {
    "apiKey": "apiKey",
    "authDomain": "projectId.firebaseapp.com",
    "databaseURL": "https://databaseName.firebaseio.com",
    "storageBucket": "projectId.appspot.com"
}


# --- INITIALIZE APP WITH GIVEN CONFIGURATIONS ---
firebase = pyrebase.initialize_app(firebaseConfig)


# --- CREATE A DATABASE ---
# Can create the hierarchy of the database using the following code
# db.child("Main Branch").child("Branch1").child("Subbranch1")
# db.child("Main Branch").child("Branch1").child("Subbranch2")
# db.child("Main Branch").child("Branch2").child("Subbranch1")
db = firebase.database()


# --- [1] SAVE THE DATA ---
# Save data with unique autogenerated key using push()
data = {"Name": "jack", "Age": "21"}
db.child("test").push(data)

# Save data with own key using set()
data = {"Name": "jill", "Age": "21"}
db.child("test").child("2").set(data)


# --- [2] UPDATE THE DATA ---
# Update data using update()
data = {"Name": "john", "Age": "22"}
db.child("test").child("2").update(data)


# --- [3] DELETE THE DATA ---
# Delete data using remove()
db.child("test").child("2").remove()


# --- [4] READ THE DATA ---
data = db.child("test").child("2").get()
print(data)                                 # get() returns the object of the data
print(data.val())                           # val() returns the dictionary of the data
print(data.key())                           # key() returns the key of the data

# Returns list of objects on each of which you can call val()/key()
data = db.child("test").get()
for node in data.each():
    print(node.key())
    print(node.val())

# Returns just the keys at particular path
data = db.child("test").shallow().get()
print(data.val())




